{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["categoria","document","querySelector","horas","horasDisponibles","querySelectorAll","dias","inputHiddenDia","inputHiddenHora","busqueda","categoria_id","dia","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","listadoPonentes","ponenteHidden","ponentes","ponentesFiltrados","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsDiv","tagsInput","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","toString","console","log","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(()=> {\r\n  const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n  const horas = document.querySelector('#horas');\r\n  const horasDisponibles = document.querySelectorAll('#horas li');\r\n  const dias = document.querySelectorAll('[name=\"dia\"]');\r\n  const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n  const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n  \r\n  let busqueda = {\r\n    categoria_id: '',\r\n    dia: '',\r\n  }\r\n  \r\n  if(horas){    \r\n    categoria.addEventListener('change', terminoBusqueda);\r\n    dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n    \r\n    // Ejecutar la función al cargar la página para detectar valores iniciales \r\n    terminoBusqueda({target: categoria});\r\n  }\r\n  \r\n  function terminoBusqueda(e){\r\n    busqueda[e.target.name] = e.target.value;\r\n    \r\n    // Reiniciar los campos ocultos y el selector de horas \r\n    inputHiddenHora.value = '';\r\n    inputHiddenDia.value = '';\r\n    \r\n    let horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n    if(horaPrevia){\r\n      horaPrevia.classList.remove('horas__hora--seleccionada');\r\n    }\r\n    \r\n    if(Object.values(busqueda).includes('')){\r\n      return;\r\n    }\r\n    \r\n    buscarEventos();\r\n  }\r\n\r\n  async function buscarEventos() {\r\n    const {dia, categoria_id} = busqueda;\r\n    const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n    const resultado = await fetch(url);\r\n    const eventos = await resultado.json();\r\n\r\n    obtenerHorasDisponibles(eventos);\r\n  }\r\n\r\n  function obtenerHorasDisponibles(eventos){\r\n    // Reiniciar las horas \r\n    const listadoHoras = document.querySelectorAll('#horas li');\r\n    listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n    // Comprobar los eventos y quitar la clase deshabilitado\r\n    const horasTomadas = eventos.map(evento => evento.hora_id);\r\n    const listadoHorasArray = Array.from(listadoHoras);\r\n    \r\n    const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n    resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n    const horasAunDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n    horasAunDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n  }\r\n\r\n  function seleccionarHora(e) {\r\n    inputHiddenHora.value = e.target.dataset.horaId;\r\n    // Agregar clase de seleccionado\r\n    horasDisponibles.forEach(hora => hora.classList.remove('horas__hora--seleccionada'));\r\n    e.target.classList.add('horas__hora--seleccionada');\r\n\r\n    inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n    // Llenar el campo oculto de dia \r\n    inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n  }\r\n})();","(()=> {\r\n  const ponentesInput = document.querySelector('#ponentes');\r\n  const listadoPonentes = document.querySelector('#listado-ponentes');\r\n  const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n  if(ponentesInput){\r\n    let ponentes = [];\r\n    let ponentesFiltrados = [];\r\n\r\n    obtenerPonentes();\r\n\r\n    ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n    async function obtenerPonentes(){\r\n      const url = `/api/ponentes`;\r\n      const respuesta = await fetch(url);\r\n      const resultado = await respuesta.json();\r\n\r\n      formatearPonentes(resultado);\r\n\r\n    }\r\n\r\n    function formatearPonentes(arrayPonentes = []){\r\n      ponentes = arrayPonentes.map( ponente => {\r\n        return {\r\n          nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n          id: ponente.id\r\n        }\r\n      })\r\n    }\r\n\r\n    function buscarPonentes(e){\r\n      const busqueda = e.target.value;\r\n\r\n      if(busqueda.length > 3){\r\n        const expresion = new RegExp(busqueda, \"i\");\r\n        ponentesFiltrados = ponentes.filter(ponente => {\r\n          if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n            return ponente;\r\n          }\r\n        })\r\n      } else {\r\n        ponentesFiltrados = [];\r\n      }\r\n      mostrarPonentes();\r\n    }\r\n\r\n    function mostrarPonentes(){\r\n      while(listadoPonentes.firstChild){\r\n        listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n      }\r\n\r\n      if(ponentesFiltrados.length > 0 ) {\r\n\r\n        ponentesFiltrados.forEach(ponente => {\r\n          const ponenteHTML = document.createElement('li');\r\n          ponenteHTML.classList.add('listado-ponentes__ponente');\r\n          ponenteHTML.textContent = ponente.nombre;\r\n          ponenteHTML.dataset.ponenteId = ponente.id;\r\n          ponenteHTML.onclick = seleccionarPonente\r\n  \r\n          // Añadir al DOM \r\n          listadoPonentes.appendChild(ponenteHTML);\r\n        })\r\n      } else {\r\n        const noResultados = document.createElement('p');\r\n        noResultados.classList.add('listado-ponentes__no-resultado');\r\n        noResultados.textContent = 'No Hay Resultados para tu búsqueda';\r\n\r\n        listadoPonentes.appendChild(noResultados);\r\n      }\r\n    }\r\n\r\n    function seleccionarPonente(e){\r\n      const ponente = e.target;\r\n      const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n\r\n      if(ponentePrevio) ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n      \r\n      ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n      ponenteHidden.value = ponente.dataset.ponenteId;\r\n    }\r\n  }\r\n})();","(()=> {\r\n\r\n  const tagsDiv = document.querySelector('#tags');\r\n  const tagsInput = document.querySelector('#tags_input');\r\n  const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n  \r\n  if(tagsInput){\r\n    let tags = [];\r\n\r\n    // recuperar del input oculto \r\n    if(tagsInputHidden.value != ''){\r\n      tags = tagsInputHidden.value.split(\",\");\r\n      mostrarTags();\r\n    }\r\n\r\n    tagsInput.addEventListener('keypress', guardarTag);\r\n    \r\n    function guardarTag(e){\r\n      if(e.keyCode === 44){\r\n        if(e.target.value.trim() === '' || e.target.value < 1){\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        tags = [...tags, e.target.value.trim()];\r\n        tagsInput.value = '';\r\n        \r\n        mostrarTags();\r\n      }\r\n    }\r\n    \r\n    function mostrarTags(){\r\n      tagsDiv.textContent = '';\r\n      tags.forEach(tag=> {\r\n        const etiqueta = document.createElement('li');\r\n        etiqueta.classList.add('formulario__tag');\r\n        etiqueta.textContent = tag;\r\n        etiqueta.ondblclick = eliminarTag;\r\n        tagsDiv.appendChild(etiqueta);\r\n      })\r\n      actualizarInputHidden();\r\n    }\r\n\r\n    function eliminarTag(e){\r\n      e.target.remove();\r\n      tags = tags.filter(tag => tag !== e.target.textContent);\r\n      console.log(tags);\r\n    }\r\n\r\n    function actualizarInputHidden() {\r\n      tagsInputHidden.value = tags.toString();\r\n    }\r\n  }\r\n\r\n})();\r\n"]}