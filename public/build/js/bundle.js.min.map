{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["categoria","document","querySelector","horas","horasDisponibles","querySelectorAll","dias","inputHiddenDia","inputHiddenHora","busqueda","categoria_id","dia","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","listadoPonentes","ponenteHidden","ponentes","ponentesFiltrados","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsDiv","tagsInput","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","toString","console","log","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(()=> {\r\n  const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n  const horas = document.querySelector('#horas');\r\n  const horasDisponibles = document.querySelectorAll('#horas li');\r\n  const dias = document.querySelectorAll('[name=\"dia\"]');\r\n  const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n  const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n  \r\n   let busqueda = {\r\n      categoria_id: '',\r\n      dia: '',\r\n    }\r\n  \r\n  if(horas){    \r\n    categoria.addEventListener('change', terminoBusqueda);\r\n    dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n    \r\n    busqueda = {\r\n      categoria_id: +categoria.value || '',\r\n      dia: +inputHiddenDia.value || '',\r\n    }\r\n    \r\n    if(!Object.values(busqueda).includes('')){\r\n\r\n      (async() => {\r\n        await buscarEventos();\r\n  \r\n        const id = inputHiddenHora.value;\r\n  \r\n        // Resaltar hora actual \r\n        const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n        horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n        horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n\r\n        horaSeleccionada.onclick = seleccionarHora;\r\n      })();\r\n    }\r\n  }\r\n  \r\n  function terminoBusqueda(e){\r\n    busqueda[e.target.name] = e.target.value;\r\n    \r\n    // Reiniciar los campos ocultos y el selector de horas \r\n    inputHiddenHora.value = '';\r\n    inputHiddenDia.value = '';\r\n    \r\n    let horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n    if(horaPrevia){\r\n      horaPrevia.classList.remove('horas__hora--seleccionada');\r\n    }\r\n    \r\n    if(Object.values(busqueda).includes('')){\r\n      return;\r\n    }\r\n    \r\n    buscarEventos();\r\n  }\r\n\r\n  async function buscarEventos() {\r\n    const {dia, categoria_id} = busqueda;\r\n    const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n    const resultado = await fetch(url);\r\n    const eventos = await resultado.json();\r\n\r\n    obtenerHorasDisponibles(eventos);\r\n  }\r\n\r\n  function obtenerHorasDisponibles(eventos){\r\n    // Reiniciar las horas \r\n    const listadoHoras = document.querySelectorAll('#horas li');\r\n    listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n    // Comprobar los eventos y quitar la clase deshabilitado\r\n    const horasTomadas = eventos.map(evento => evento.hora_id);\r\n    const listadoHorasArray = Array.from(listadoHoras);\r\n    \r\n    const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n    resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n    const horasAunDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n    horasAunDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n  }\r\n\r\n  function seleccionarHora(e) {\r\n    inputHiddenHora.value = e.target.dataset.horaId;\r\n    // Agregar clase de seleccionado\r\n    horasDisponibles.forEach(hora => hora.classList.remove('horas__hora--seleccionada'));\r\n    e.target.classList.add('horas__hora--seleccionada');\r\n\r\n    inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n    // Llenar el campo oculto de dia \r\n    inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n  }\r\n})();","(()=> {\r\n  const ponentesInput = document.querySelector('#ponentes');\r\n  const listadoPonentes = document.querySelector('#listado-ponentes');\r\n  const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n  if(ponentesInput){\r\n    let ponentes = [];\r\n    let ponentesFiltrados = [];\r\n\r\n    obtenerPonentes();\r\n\r\n    ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n    if(ponenteHidden.value){\r\n      (async()=> {\r\n        const ponente = await obtenerPonente(ponenteHidden.value)\r\n\r\n        // Insertar en el HTML \r\n        const ponenteDOM = document.createElement('li');\r\n        ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n        ponenteDOM.textContent = `${ponente.nombre} ${ponente.apellido}`;\r\n\r\n        listadoPonentes.appendChild(ponenteDOM);\r\n      })();\r\n    }\r\n\r\n    async function obtenerPonentes(){\r\n      const url = `/api/ponentes`;\r\n      const respuesta = await fetch(url);\r\n      const resultado = await respuesta.json();\r\n\r\n      formatearPonentes(resultado);\r\n\r\n    }\r\n\r\n    async function obtenerPonente(id){\r\n      const url = `/api/ponente?id=${id}`;\r\n      const respuesta = await fetch(url);\r\n      const resultado = await respuesta.json();\r\n      return resultado;\r\n    }\r\n\r\n    function formatearPonentes(arrayPonentes = []){\r\n      ponentes = arrayPonentes.map( ponente => {\r\n        return {\r\n          nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n          id: ponente.id\r\n        }\r\n      })\r\n    }\r\n\r\n    function buscarPonentes(e){\r\n      const busqueda = e.target.value;\r\n\r\n      if(busqueda.length > 3){\r\n        const expresion = new RegExp(busqueda, \"i\");\r\n        ponentesFiltrados = ponentes.filter(ponente => {\r\n          if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n            return ponente;\r\n          }\r\n        })\r\n      } else {\r\n        ponentesFiltrados = [];\r\n      }\r\n      mostrarPonentes();\r\n    }\r\n\r\n    function mostrarPonentes(){\r\n      while(listadoPonentes.firstChild){\r\n        listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n      }\r\n\r\n      if(ponentesFiltrados.length > 0 ) {\r\n\r\n        ponentesFiltrados.forEach(ponente => {\r\n          const ponenteHTML = document.createElement('li');\r\n          ponenteHTML.classList.add('listado-ponentes__ponente');\r\n          ponenteHTML.textContent = ponente.nombre;\r\n          ponenteHTML.dataset.ponenteId = ponente.id;\r\n          ponenteHTML.onclick = seleccionarPonente\r\n  \r\n          // Añadir al DOM \r\n          listadoPonentes.appendChild(ponenteHTML);\r\n        })\r\n      } else {\r\n        const noResultados = document.createElement('p');\r\n        noResultados.classList.add('listado-ponentes__no-resultado');\r\n        noResultados.textContent = 'No Hay Resultados para tu búsqueda';\r\n\r\n        listadoPonentes.appendChild(noResultados);\r\n      }\r\n    }\r\n\r\n    function seleccionarPonente(e){\r\n      const ponente = e.target;\r\n      const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n\r\n      if(ponentePrevio) ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n      \r\n      ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n      ponenteHidden.value = ponente.dataset.ponenteId;\r\n    }\r\n  }\r\n})();","(()=> {\r\n\r\n  const tagsDiv = document.querySelector('#tags');\r\n  const tagsInput = document.querySelector('#tags_input');\r\n  const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n  \r\n  if(tagsInput){\r\n    let tags = [];\r\n\r\n    // recuperar del input oculto \r\n    if(tagsInputHidden.value != ''){\r\n      tags = tagsInputHidden.value.split(\",\");\r\n      mostrarTags();\r\n    }\r\n\r\n    tagsInput.addEventListener('keypress', guardarTag);\r\n    \r\n    function guardarTag(e){\r\n      if(e.keyCode === 44){\r\n        if(e.target.value.trim() === '' || e.target.value < 1){\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        tags = [...tags, e.target.value.trim()];\r\n        tagsInput.value = '';\r\n        \r\n        mostrarTags();\r\n      }\r\n    }\r\n    \r\n    function mostrarTags(){\r\n      tagsDiv.textContent = '';\r\n      tags.forEach(tag=> {\r\n        const etiqueta = document.createElement('li');\r\n        etiqueta.classList.add('formulario__tag');\r\n        etiqueta.textContent = tag;\r\n        etiqueta.ondblclick = eliminarTag;\r\n        tagsDiv.appendChild(etiqueta);\r\n      })\r\n      actualizarInputHidden();\r\n    }\r\n\r\n    function eliminarTag(e){\r\n      e.target.remove();\r\n      tags = tags.filter(tag => tag !== e.target.textContent);\r\n      console.log(tags);\r\n    }\r\n\r\n    function actualizarInputHidden() {\r\n      tagsInputHidden.value = tags.toString();\r\n    }\r\n  }\r\n\r\n})();\r\n"]}